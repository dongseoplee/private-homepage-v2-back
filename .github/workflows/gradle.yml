# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  
env:
  S3_BUCKET_NAME: myapibucket-deploy
  PROJECT_NAME: private-homepage-v2-back

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # create application.properties
    - name: make application.properties
      run: |
        if [ ! -d "./src/main/resources" ]; then
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application.properties
        fi
      shell: bash

    - name: deliver application.properties
      run: echo "${{ secrets.APPLICATION_PROPERTIES_CODE }}" > ./src/main/resources/application.properties
      shell: bash

    - name: Build with Gradle
      run: ./gradlew clean build
#      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
#      with:
#        arguments: build

    # 디렉토리 생성
    - name: Make Directory
      run: mkdir -p deploy

    # deploy 폴더로 Jar 파일 복사
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy

    # appspec.yml 파일 복사
    - name: Copy appspec.yml
      run: cp appspec.yml ./deploy

    # script files 복사
    - name: Copy script
      run: cp ./*.sh ./deploy

    - name: Make zip file
      run: zip -r ./githubActionDeploy.zip ./deploy
      shell: bash
      
    # S3 Bucket으로 Copy
    - name: Deliver to AWS S3
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./githubActionDeploy.zip s3://$S3_BUCKET_NAME/

#    - name: Code Deploy
#      run: aws deploy create-deployment --application-name $CODEDEPLOY_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODEDEPLOY_GROUP --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip

    # Deploy11
    - name: Deploy11
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws deploy create-deployment \
        --application-name github-actions \
        --deployment-group-name github-actions-group \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=githubActionDeploy.zip \
        --region ap-northeast-2